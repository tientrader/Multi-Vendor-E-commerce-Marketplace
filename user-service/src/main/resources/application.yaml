server:
  port: 8080
  servlet:
    context-path: /user

spring:
  application:
    name: user-service
  datasource:
    url: ${MYSQL_CONNECTION}
    driverClassName: "com.mysql.cj.jdbc.Driver"
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8180/realms/tienproapp
  kafka:
    bootstrap-servers: localhost:9094
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

idp:
  url: http://localhost:8180
  client-id: ${CLIENT_ID}
  client-secret: ${CLIENT_SECRET}

management:
  endpoints:
    web:
      exposure:
        include: health, metrics, info, prometheus
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
  observations:
    key-values:
      application: user-service
  endpoint:
    prometheus:
      enabled: true
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
  tracing:
    exporter:
      tempo:
        url: http://localhost:3200
    sampler:
      probability: 1.0