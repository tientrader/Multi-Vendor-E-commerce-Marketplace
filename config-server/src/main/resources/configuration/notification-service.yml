server:
  port: 8086
  servlet:
    context-path: /notification

spring:
  data:
    mongodb:
      uri: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@localhost:27017/notification-service?authSource=admin
  kafka:
    bootstrap-servers: localhost:9094
    consumer:
      group-id: notification-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

notification:
  email:
    brevo-url: https://api.brevo.com
    brevo-apikey: ${BREVO_API_KEY}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /v3/api-docs

logging:
  level:
    root: INFO
    com.netflix.discovery: OFF

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
    instances:
      sendEmail:
        baseConfig: default

  retry:
    configs:
      default:
        maxRetryAttempts: 3
        waitDuration: 2s
    instances:
      sendEmail:
        baseConfig: default

management:
  endpoints:
    web:
      exposure:
        include: health, metrics, info, prometheus
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
  observations:
    key-values:
      application: notification-service
  endpoint:
    prometheus:
      enabled: true
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
  tracing:
    exporter:
      zipkin:
        url: http://localhost:9411/api/v2/spans
    sampling:
      probability: 1.0