version: "3.9"
services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: ./api-gateway/Dockerfile
    container_name: api-gateway
    image: ntien03/api-gateway
    ports:
      - "8888:8888"
    networks:
      - tien-network

  user-service:
    build:
      context: ./user-service
      dockerfile: ./user-service/Dockerfile
    container_name: user-service
    image: ntien03/user-service
    environment:
      - MYSQL_CONNECTION=
      - MYSQL_USERNAME=
      - MYSQL_PASSWORD=
      - CLIENT_ID=
      - CLIENT_SECRET=
    ports:
      - "8080:8080"
    networks:
      - tien-network

  shop-service:
    build:
      context: ./shop-service
      dockerfile: ./shop-service/Dockerfile
    container_name: shop-service
    image: ntien03/shop-service
    environment:
      - MONGO_USERNAME=
      - MONGO_PASSWORD=
    ports:
      - "8081:8081"
    networks:
      - tien-network

  product-service:
    build:
      context: ./product-service
      dockerfile: ./product-service/Dockerfile
    container_name: product-service
    image: ntien03/product-service
    environment:
      - MONGO_USERNAME=
      - MONGO_PASSWORD=
    ports:
      - "8082:8082"
    networks:
      - tien-network

  cart-service:
    build:
      context: ./cart-service
      dockerfile: ./cart-service/Dockerfile
    container_name: cart-service
    image: ntien03/cart-service
    environment:
      - REDIS_HOST=
      - REDIS_PORT=
      - REDIS_PASSWORD=
    ports:
      - "8083:8083"
    networks:
      - tien-network

  order-service:
    build:
      context: ./order-service
      dockerfile: ./order-service/Dockerfile
    container_name: order-service
    image: ntien03/order-service
    environment:
      - MYSQL_CONNECTION=
      - MYSQL_USERNAME=
      - MYSQL_PASSWORD=
    ports:
      - "8084:8084"
    networks:
      - tien-network

  post-service:
    build:
      context: ./post-service
      dockerfile: ./post-service/Dockerfile
    container_name: post-service
    image: ntien03/post-service
    environment:
      - MONGO_USERNAME=
      - MONGO_PASSWORD=
    ports:
      - "8085:8085"
    networks:
      - tien-network

  notification-service:
    build:
      context: ./notification-service
      dockerfile: ./notification-service/Dockerfile
    container_name: notification-service
    image: ntien03/notification-service
    environment:
      - MONGO_USERNAME=
      - MONGO_PASSWORD=
      - BREVO_API_KEY=
    ports:
      - "8086:8086"
    networks:
      - tien-network

networks:
  tien-network:
    driver: bridge